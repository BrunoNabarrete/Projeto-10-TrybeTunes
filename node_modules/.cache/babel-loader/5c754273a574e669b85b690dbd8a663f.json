{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/Projetos/Projeto-lessons-learned/sd-026-a-project-trybetunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      musics: [],\n      favoriteSaved: [],\n      isLoading: false\n    };\n\n    this.favoriteSaved = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const saved = await getFavoriteSongs();\n      this.setState({\n        isLoading: false,\n        favoriteSaved: saved\n      });\n    };\n\n    this.musicsApi = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const musicReturn = await getMusics(id);\n      this.setState({\n        musics: musicReturn\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.musicsApi();\n  }\n\n  componentDidUpdate() {\n    this.favoriteSaved();\n  }\n\n  render() {\n    const {\n      isLoading,\n      favoriteSaved\n    } = this.props;\n    const {\n      musics\n    } = this.state;\n    console.log(favoriteSaved);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"artist-name\",\n        children: musics[0] && musics[0].artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        \"data-testid\": \"album-name\",\n        children: musics[0] && musics[0].collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), musics.map((song, index) => index > 0 && /*#__PURE__*/_jsxDEV(MusicCard, {\n        previewUrl: song.previewUrl,\n        trackName: song.trackName,\n        trackId: song.trackId,\n        ...song\n      }, song.trackId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 53\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  isLoading: PropTypes.bool\n};\nexport default Album;","map":{"version":3,"names":["React","Component","PropTypes","Header","MusicCard","getMusics","getFavoriteSongs","Loading","Album","state","musics","favoriteSaved","isLoading","setState","saved","musicsApi","match","params","id","props","musicReturn","componentDidMount","componentDidUpdate","render","console","log","artistName","collectionName","map","song","index","previewUrl","trackName","trackId","propTypes","shape","string","isRequired","bool"],"sources":["/home/bruno/Documentos/Projetos/Projeto-lessons-learned/sd-026-a-project-trybetunes/src/pages/Album.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass Album extends Component {\n  state = {\n    musics: [],\n    favoriteSaved: [],\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    this.musicsApi();\n  }\n\n  componentDidUpdate() {\n    this.favoriteSaved();\n  }\n\n  favoriteSaved = async () => {\n    this.setState({\n      isLoading: true,\n    });\n    const saved = await getFavoriteSongs();\n    this.setState({\n      isLoading: false,\n      favoriteSaved: saved,\n    });\n  };\n\n  musicsApi = async () => {\n    const { match: { params: { id } } } = this.props;\n    const musicReturn = await getMusics(id);\n    this.setState(({\n      musics: musicReturn,\n    }));\n  };\n\n  render() {\n    const { isLoading, favoriteSaved } = this.props;\n    const { musics } = this.state;\n    console.log(favoriteSaved);\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {isLoading && <Loading />}\n        <h3 data-testid=\"artist-name\">\n          { musics[0] && musics[0].artistName }\n        </h3>\n        <h4 data-testid=\"album-name\">\n\n          { musics[0] && musics[0].collectionName }\n        </h4>\n        { musics.map((song, index) => (index > 0 && <MusicCard\n          previewUrl={ song.previewUrl }\n          key={ song.trackId }\n          trackName={ song.trackName }\n          trackId={ song.trackId }\n          { ...song }\n        />))}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  isLoading: PropTypes.bool,\n};\n\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;EAAA;IAAA;IAAA,KAC5BQ,KAD4B,GACpB;MACNC,MAAM,EAAE,EADF;MAENC,aAAa,EAAE,EAFT;MAGNC,SAAS,EAAE;IAHL,CADoB;;IAAA,KAe5BD,aAf4B,GAeZ,YAAY;MAC1B,KAAKE,QAAL,CAAc;QACZD,SAAS,EAAE;MADC,CAAd;MAGA,MAAME,KAAK,GAAG,MAAMR,gBAAgB,EAApC;MACA,KAAKO,QAAL,CAAc;QACZD,SAAS,EAAE,KADC;QAEZD,aAAa,EAAEG;MAFH,CAAd;IAID,CAxB2B;;IAAA,KA0B5BC,SA1B4B,GA0BhB,YAAY;MACtB,MAAM;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;YAAEC;UAAF;QAAV;MAAT,IAAgC,KAAKC,KAA3C;MACA,MAAMC,WAAW,GAAG,MAAMf,SAAS,CAACa,EAAD,CAAnC;MACA,KAAKL,QAAL,CAAe;QACbH,MAAM,EAAEU;MADK,CAAf;IAGD,CAhC2B;EAAA;;EAOL,MAAjBC,iBAAiB,GAAG;IACxB,KAAKN,SAAL;EACD;;EAEDO,kBAAkB,GAAG;IACnB,KAAKX,aAAL;EACD;;EAqBDY,MAAM,GAAG;IACP,MAAM;MAAEX,SAAF;MAAaD;IAAb,IAA+B,KAAKQ,KAA1C;IACA,MAAM;MAAET;IAAF,IAAa,KAAKD,KAAxB;IACAe,OAAO,CAACC,GAAR,CAAYd,aAAZ;IACA,oBACE;MAAK,eAAY,YAAjB;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,EAEGC,SAAS,iBAAI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAFhB,eAGE;QAAI,eAAY,aAAhB;QAAA,UACIF,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUgB;MAD3B;QAAA;QAAA;QAAA;MAAA,QAHF,eAME;QAAI,eAAY,YAAhB;QAAA,UAEIhB,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUiB;MAF3B;QAAA;QAAA;QAAA;MAAA,QANF,EAUIjB,MAAM,CAACkB,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAkBA,KAAK,GAAG,CAAR,iBAAa,QAAC,SAAD;QAC1C,UAAU,EAAGD,IAAI,CAACE,UADwB;QAG1C,SAAS,EAAGF,IAAI,CAACG,SAHyB;QAI1C,OAAO,EAAGH,IAAI,CAACI,OAJ2B;QAAA,GAKrCJ;MALqC,GAEpCA,IAAI,CAACI,OAF+B;QAAA;QAAA;QAAA;MAAA,QAA1C,CAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD;;AA1D2B;;AA6D9BzB,KAAK,CAAC0B,SAAN,GAAkB;EAChBlB,KAAK,EAAEd,SAAS,CAACiC,KAAV,CAAgB;IACrBlB,MAAM,EAAEf,SAAS,CAACiC,KAAV,CAAgB;MACtBjB,EAAE,EAAEhB,SAAS,CAACkC,MAAV,CAAiBC;IADC,CAAhB,EAELA;EAHkB,CAAhB,EAIJA,UALa;EAMhBzB,SAAS,EAAEV,SAAS,CAACoC;AANL,CAAlB;AASA,eAAe9B,KAAf"},"metadata":{},"sourceType":"module"}